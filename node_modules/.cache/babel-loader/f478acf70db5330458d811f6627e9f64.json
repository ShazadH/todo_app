{"ast":null,"code":"var _jsxFileName = \"/Users/shazad/MyGithub/todo_app/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Todo from \"./Todo\";\nimport { Button, FormControl, InputLabel, Input } from \"@material-ui/core\";\nimport \"./App.css\";\nimport db from \"./firebase\";\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [input, setInput] = useState(\"\"); // When the app loads, we need to listen to the database and fetch new todos as they get added/removed\n\n  useEffect(() => {\n    // this code here.... fires when the app.js loads\n    db.collection(\"todos\").onSnapshot(snapshot => {\n      setTodos(snapshot.docs.map(doc => doc.data().todo));\n    });\n  }, []);\n\n  const addTodo = event => {\n    // this will fire off when we click the button\n    event.preventDefault(); // will not refresh the page\n\n    db.collection(\"todos\").add({\n      todo: input\n    });\n    setInput(\"\"); // clear up the input\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, \"Hello Shazad!!!\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, \"Write a todo\"), /*#__PURE__*/React.createElement(Input, {\n    value: input,\n    onChange: event => setInput(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    disabled: !input,\n    type: \"submit\",\n    onClick: addTodo,\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"Add Todo\")), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, todos.map(todo => /*#__PURE__*/React.createElement(Todo, {\n    text: todo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/shazad/MyGithub/todo_app/src/App.js"],"names":["React","useState","useEffect","Todo","Button","FormControl","InputLabel","Input","db","App","todos","setTodos","input","setInput","collection","onSnapshot","snapshot","docs","map","doc","data","todo","addTodo","event","preventDefault","add","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,MAAT,EAAiBC,WAAjB,EAA8BC,UAA9B,EAA0CC,KAA1C,QAAuD,mBAAvD;AACA,OAAO,WAAP;AACA,OAAOC,EAAP,MAAe,YAAf;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC,CAFa,CAIb;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACAM,IAAAA,EAAE,CAACM,UAAH,CAAc,OAAd,EAAuBC,UAAvB,CAAmCC,QAAD,IAAc;AAC9CL,MAAAA,QAAQ,CAACK,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAmBC,GAAD,IAASA,GAAG,CAACC,IAAJ,GAAWC,IAAtC,CAAD,CAAR;AACD,KAFD;AAGD,GALQ,EAKN,EALM,CAAT;;AAOA,QAAMC,OAAO,GAAIC,KAAD,IAAW;AACzB;AACAA,IAAAA,KAAK,CAACC,cAAN,GAFyB,CAED;;AAExBhB,IAAAA,EAAE,CAACM,UAAH,CAAc,OAAd,EAAuBW,GAAvB,CAA2B;AACzBJ,MAAAA,IAAI,EAAET;AADmB,KAA3B;AAGAC,IAAAA,QAAQ,CAAC,EAAD,CAAR,CAPyB,CAOX;AACf,GARD;;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAED,KADT;AAEE,IAAA,QAAQ,EAAGW,KAAD,IAAWV,QAAQ,CAACU,KAAK,CAACG,MAAN,CAAaC,KAAd,CAF/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eASE,oBAAC,MAAD;AACE,IAAA,QAAQ,EAAE,CAACf,KADb;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,OAAO,EAAEU,OAHX;AAIE,IAAA,OAAO,EAAC,WAJV;AAKE,IAAA,KAAK,EAAC,SALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,CAFF,eAsBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGZ,KAAK,CAACQ,GAAN,CAAWG,IAAD,iBACT,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEA,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAtBF,CADF;AA8BD;;AAED,eAAeZ,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Todo from \"./Todo\";\nimport { Button, FormControl, InputLabel, Input } from \"@material-ui/core\";\nimport \"./App.css\";\nimport db from \"./firebase\";\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [input, setInput] = useState(\"\");\n\n  // When the app loads, we need to listen to the database and fetch new todos as they get added/removed\n  useEffect(() => {\n    // this code here.... fires when the app.js loads\n    db.collection(\"todos\").onSnapshot((snapshot) => {\n      setTodos(snapshot.docs.map((doc) => doc.data().todo));\n    });\n  }, []);\n\n  const addTodo = (event) => {\n    // this will fire off when we click the button\n    event.preventDefault(); // will not refresh the page\n\n    db.collection(\"todos\").add({\n      todo: input,\n    });\n    setInput(\"\"); // clear up the input\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Hello Shazad!!!</h1>\n      <form>\n        <FormControl>\n          <InputLabel>Write a todo</InputLabel>\n          <Input\n            value={input}\n            onChange={(event) => setInput(event.target.value)}\n          />\n        </FormControl>\n\n        <Button\n          disabled={!input}\n          type=\"submit\"\n          onClick={addTodo}\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Add Todo\n        </Button>\n      </form>\n\n      <ul>\n        {todos.map((todo) => (\n          <Todo text={todo} />\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}